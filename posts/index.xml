<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Under the sky</title>
    <link>https://ixnik.tk/posts/</link>
    <description>Recent content in Posts on Under the sky</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Thomas Wu 2020 ~ 2021</copyright>
    <lastBuildDate>Mon, 05 Jul 2021 21:12:52 +0800</lastBuildDate><atom:link href="https://ixnik.tk/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clang and Clang&#43;&#43;</title>
      <link>https://ixnik.tk/posts/clang-and-clang&#43;&#43;/</link>
      <pubDate>Mon, 05 Jul 2021 21:12:52 +0800</pubDate>
      
      <guid>https://ixnik.tk/posts/clang-and-clang&#43;&#43;/</guid>
      <description>最近一段时间，我直接把 clang 当作 clang++ 使用，因为我发现在 macOS 11.4 使用 xcode-select 安装的 Apple 版本的命令行工具中，无论是 clang clang++还是 c++ , 其实都是一个可执行文件，也就是 clang ，而 clang++和 c++都是一个符号连接，指向了 clang 。那么理论上我使用 clang 和 clang++  效果是一样的，不是吗？
不是的。事实告诉我，这两种 “叫法” 会导致不同的行为。clang 就是用来编译 C 代码的，而不能编译 C++ 代码。换句话说，这个可执行文件可以知道调用自己时的名称，从而根据名称来决定自身的行为。那么，在 C 家族的语言中, main函数的一个叫做 argv 的参数的第一个元素便是程序本来的名字。
1 2 3 4 5  #include &amp;lt;iostream&amp;gt; int main(int argc,const char* argv[]) { std::cout &amp;lt;&amp;lt; argv[0] &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;; // argv[0] is the name of program. }   那么如果编译器输出的可执行文件叫做 a.</description>
    </item>
    
  </channel>
</rss>
